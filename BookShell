import java.io.*;
import java.lang.*;
import java.util.*;

public class BookShell extends Book implements Serializable 
{
	Scanner keyboard = new Scanner(System.in);
	private Book newBook;
	private int currentBooks;
	private static final int MaxBookShell = 128;
	public static void main(String[] args)
	{
		Book Bookshell [] = new Book [MaxBookShell];
		Boolean LoginState = login();
		menu();
	}
        public void menu()//主選單
        {
		if(LoginState == true)
		{
		System.out.println("Log in success.");
		System.out.println("Start managing the library.");
		System.out.println("Please input an operation. If you forgot the operations, please type instruction for detials.");
		String operation = keyboard.nextLine();
		try
		{
			if(operation.equals("append")){Append();}
			else if(operation.equals("delete")){Delete();}
			else if(operation.equals("print")){Print();}
			else if(operation.equals("search")){Search();}
			else if(operation.equals("instruction")){Instruction();}
			else if(operation.equals("exit")){Exit();}
			else throw new NotAnOperationException();
		}
		catch(NotAnOperationException e)
		{
			System.out.println("Not an operation or incorrect typing.");
			menu();
		}
		System.out.println("Library managing process is ended.");
		System.out.println("Thank you for using.");
		System.exit(0);
        }
	
	public void Append() //新增一筆資料 
	{ 
		System.out.println("Please enter the book name.");
		String InputBookName = keyboard.nextLine();
		System.out.println("Please enter the author name.");
		String InputAuthor = keyboard.nextLine();
		System.out.println("Please enter the publisher's name.");
		String InputPublisher = keyboard.nextLine();
		System.out.println("Please enter the book code.");
		String InputCode = keyboard.nextLine();
		System.out.println("Please enter the genre of the book.");
		String InputGenre = keyboard.nextLine();
		System.out.println("Please enter the year of publishing.");
		String InputYear = keyboard.nextLine();
		BookShell [currentBooks] = new book(InputBookName, InputAuthor, InputPublisher, InputCode, InputGenre, InputYear);
		currentBooks++; //現存書籍數量+1
		menu();
	}
	public void Delete()//刪除一筆資料
	{
		--currentBooks;
		System.out.println("Please enter the book code to be deleted.");
		String codeToBeDeleted = keyboard.nextLine();
		for((int i = 0;i < currentBooks();i++)
		{
			if(codeToBeDeleted.equals(BookShell [i].getCode()))
			{
				BookShell [i] = new Book (BookShell [currentBooks]);
				BookShell [currentBooks] = new Book();
			}
		}
		
		menu();
		
	}
	public void Search()
	{
		System.out.println("Please enter the book code you're looking for.");
		String codeToSearch = keyboard.nextLine();
		for((int i = 0;i < currentBooks();i++)
		{
			if(codeToSearch.equals(BookShell [i].getCode()))
			{
				System.out.println(BookShell [i].toString);
			}
		}
		menu();
		
		
	}
	public void Print()//輸出全部書籍
	{
		for(int i = 0;i < currentBooks;i++)
		{
			System.out.printf(BookShell [i].toString());
		}
		menu();
	}
	public void Instruction()  //查詢指令表
	{
		System.out.println("-append: append a book into the shell.");
		System.out.println("-delete: delete a book from the shell.");
		System.out.println(" -print: print all the books in the shell.");
		System.out.println("-search: search a book in the shell with the code.");
		menu();
	}
        public Boolean login() //確定登入資料 + 創建物件
        {
		String Account = "cis";
		String Password = "1234";
		System.out.print("Account:")
		String InputAccount = keyboard.nextLine();
		System.out.print("Password:")
		String InputPassword = keyboard.nextLine();
		return (InputAccount.equals(Account)&&InputPassword.equals(Password));
        }
	public int getCurrentBooks()
	{
		return currentBooks;
	}
}
